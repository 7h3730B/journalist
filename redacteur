#!/bin/sh

api_url="$JOURNALIST_API_URL"

depcheck() {
  dep="$1"
  if ! type $dep > /dev/null
  then
    printf "$dep missing, please install\n"
    exit 1
  fi
}

usage() {
  printf "Redacteur, the Journalist API client\n"
  printf "https://github.com/mrusme/journalist\n"
  printf "\n"
  printf "usage: %s <subcommand> [args...]\n" "$0"
  printf "\n"
  printf "SUBCOMMANDS\n"
  printf "\n"
  printf "  perform: Perform raw API call\n"
  printf "    args:\n"
  printf "    <action> on <endpoint> as <username> <password> [with <payload>]\n" "$0"
  printf "\n"
  printf "    action:   get, post, put, delete\n"
  printf "    endpoint: users[/<id>], tokens[/<id>], feeds[/<id>]\n"
  printf "    payload:  JSON string\n"
  printf "\n"
  printf "    EXAMPLES\n"
  printf "\n"
  printf "    %s perform get on users/d83807a0-22ec-4c9f-94bf-fee5cf882d6e as admin \$(pass show journalist/admin)\n" "$0"
  printf "    %s perform post on tokens as myuser mypassword with '{ \"name\": \"mytoken\" }'\n" "$0"
  printf "\n"
  printf "ENVIRONMENT\n"
  printf "\n"
  printf "  JOURNALIST_API_URL: url to Journalist's API endpoint, e.g. http://127.0.0.1:8000/api\n"
  printf "\n"
}

perform() {
  if [ "$#" -lt 6 ]
  then
    usage
    exit 1
  fi

  action=$(printf "%s" "$1" | tr '[:lower:]' '[:upper:]')
  # "on"=$2
  endpoint="$3"
  # "as"=$4
  user="$5"
  pass="$6"
  # "with"=$7
  payload="$8"

  if [ "$payload" = "" ]
  then
    json=$(curl -s -u "$user:$pass" -H 'Content-Type: application/json; charset=utf-8' -X "$action" "$api_url/$endpoint")
  else
    json=$(curl -s -u "$user:$pass" -H 'Content-Type: application/json; charset=utf-8' -X "$action" "$api_url/$endpoint" -d "$payload")
  fi

  if [ $? -ne 0 ]
  then
    printf "{}"
    return 1
  fi

  printf "%s" "$json"
  if printf "%s" "$json" | jq '.success' | grep "false" > /dev/null
  then
    return 2
  fi

  return 0
}

depcheck curl
depcheck jq

if [ "$#" -lt 1 ]
then
  usage
  exit 1
fi

subcommand="$1"

case "$subcommand" in
  "perform")
    perform "${@:2}"
    exit $?
    ;;
  *)
    usage
    exit 1
    ;;
esac

